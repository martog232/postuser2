{"version":3,"file":"ng-terminal.js","sources":["../../../projects/ng-terminal/src/lib/ng-terminal.service.ts","../../../projects/ng-terminal/src/lib/global-style/global-style.component.ts","../../../projects/ng-terminal/src/lib/global-style/global-style.component.html","../../../projects/ng-terminal/src/lib/ng-terminal.component.ts","../../../projects/ng-terminal/src/lib/ng-terminal.component.html","../../../projects/ng-terminal/src/lib/ng-terminal.module.ts","../../../projects/ng-terminal/src/lib/functions-using-csi.ts","../../../projects/ng-terminal/src/public-api.ts","../../../projects/ng-terminal/src/ng-terminal.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgTerminalService {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'global-style',\r\n  templateUrl: './global-style.component.html',\r\n  styleUrls: ['../../../../../node_modules/xterm/css/xterm.css'],  //global styles\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class GlobalStyleComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","","import { Component, OnInit, AfterViewChecked, ViewChild, ElementRef, Input, Output, EventEmitter, OnDestroy, AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, OnChanges, Renderer2, SimpleChanges } from '@angular/core';\nimport { Terminal } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { NgTerminal } from './ng-terminal';\nimport { Subject, Observable, Subscription, combineLatest, ObjectUnsubscribedError, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ResizeEvent } from 'angular-resizable-element';\nimport { ResizeObserver } from '@juggle/resize-observer';\n\n\n@Component({\n  selector: 'ng-terminal',\n  templateUrl: './ng-terminal.component.html',\n  styleUrls: ['./ng-terminal.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgTerminalComponent implements OnInit, OnChanges, AfterViewInit, NgTerminal, OnDestroy {\n  private term: Terminal;\n  private fitAddon: FitAddon;\n  private keyInputSubject: Subject<string> = new Subject<string>();\n  private keyEventSubject = new Subject<{ key: string; domEvent: KeyboardEvent; }>();\n  private requestRenderFromAPI = new Subject<{\n    rowChanged?: boolean, columnChanged?: boolean\n    , dragged?: { draggedWidth: string, draggedHeight: string }\n    , hostResized?: { width: string, height: string }\n    , whenTerminalDimensionIsOverOuterDiv?: { width: string, height: string }\n  }>();\n  private allLogsSubject = new Subject<{\n    rowChanged: boolean\n    , columnChanged: boolean\n    , dragged?: { draggedWidth: string, draggedHeight: string }\n    , hostResized?: { width: string, height: string }\n    , whenTerminalDimensionIsOverOuterDiv?: { width: string, height: string }\n  }>();\n  // private afterViewInitSubject = new Subject<void>();\n\n  private keyInputSubjectSubscription: Subscription;\n  private keyEventSubjectSubscription: Subscription;\n  private allLogsSubjectSubscription: Subscription;\n  private requestRenderSubscription: Subscription;\n  private resizableObservers: ResizeObserver[] = [];\n  private h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n  // private displayOption: DisplayOption = {};\n  private dataSource: Observable<string>;\n  private dataSourceSubscription: Subscription;\n  private readonly paddingSize = 5;\n  stylesForDiv: Partial<CSSStyleDeclaration> = { 'display': 'block' };\n\n  @Input('dataSource')\n  set _dataSource(ds) {\n    if (this.dataSourceSubscription != null) {\n      this.dataSourceSubscription.unsubscribe();\n    }\n    this.dataSource = ds;\n    this.dataSourceSubscription = this.dataSource.subscribe((data) => {\n      this.write(data);\n    })\n  }\n  get _dataSource() {\n    return this.dataSource;\n  }\n\n  @Input('rows')\n  _rowsInput?: number;\n  @Input('cols')\n  _colsInput?: number;\n  @Input('minWidth')\n  _minWidthInput?: number;\n  @Input('minHeight')\n  _minHeightInput?: number;\n  @Input('draggable')\n  set draggable(draggable: boolean) {\n    this._draggableInput = draggable;\n    // this.applyStyleToDraggable();\n  }\n  get draggable(){\n    return this._draggableInput;\n  }\n  lastDraggedPosition:{width: string, height: string};\n\n  _draggableInput?: boolean = false;\n\n  _stylesInput: any = {};\n\n  setMinWidth(width: number): void {\n    this._minWidthInput = width;\n  }\n  setMinHeight(height: number): void {\n    this._minHeightInput = height;\n  }\n\n  setDraggable(draggable: boolean): void {\n    this._draggableInput = draggable;\n    this.lastDraggedPosition = undefined;\n    this.ref.markForCheck();\n  }\n\n  setRows(rows: number): void {\n    if (this._rowsInput != rows){\n      this._rowsInput = rows;\n      this.requestRenderFromAPI.next({ rowChanged: true });\n    }\n  }\n\n  setCols(cols: number): void {\n    if (this._colsInput != cols){\n      this._colsInput = cols;\n      this.requestRenderFromAPI.next({ columnChanged: true });\n    }\n  }\n\n  setStyle(styleObject: any): void {\n    if (JSON.stringify(this._stylesInput ?? {}) != JSON.stringify(styleObject ?? {})){\n      this._stylesInput = styleObject;\n      this.requestRenderFromAPI.next({});\n    }\n    \n  }\n\n  @Output('keyInput')\n  keyInputEmitter = new EventEmitter<string>();\n\n  @Output('keyEvent')\n  keyEventEmitter = new EventEmitter<{ key: string; domEvent: KeyboardEvent; }>();\n\n  @ViewChild('terminal', { static: true })\n  terminalOuter: ElementRef;\n\n  @ViewChild('resizeBox', { static: true })\n  resizeBox: ElementRef;\n\n  private getNextOrWait() {\n    if (!this.hostRef.nativeElement.isConnected) {\n      this.stopAndPolling();\n    } else {\n      this.releaseNextOne();\n    }\n  }\n  private pushToWaitingQueue(item: {\n    rowChanged: boolean\n    , columnChanged: boolean\n    , dragged?: { draggedWidth: string, draggedHeight: string }\n    , hostResized?: { width: string, height: string }\n    , whenTerminalDimensionIsOverOuterDiv?: { width: string, height: string }\n  }) {\n    this.waitingQueue.push(item);\n    this.releaseNextOne();\n  }\n\n  /**\n   * @internal\n   */\n  private stopAndPolling() {\n    const pollFunction = () => {\n      if (this.interval)\n        return;\n      const interval = setInterval(() => {\n        if (this.hostRef.nativeElement.isConnected) {\n          clearInterval(interval);\n          this.interval = undefined;\n          this.releaseNextOne();\n        }\n      }, 500);\n      this.interval = interval;\n    }\n    pollFunction();\n  }\n\n  /**\n   * @internal don't make a direct call\n   */\n  interval: ReturnType<typeof setInterval>;\n\n  /**\n   * @internal don't make a direct call\n   */\n  private releaseNextOne = () => {\n    if (!this.interval) {\n      let list = this.waitingQueue.splice(0, 1);\n      if (list.length == 1) {\n        this.allLogsSubject.next(list[0]);\n      }\n    }\n  }\n\n  /**\n   * @internal don't make a direct call\n   */\n  private waitingQueue: {\n    rowChanged: boolean\n    , columnChanged: boolean\n    , dragged?: { draggedWidth: string, draggedHeight: string }\n    , hostResized?: { width: string, height: string }\n    , whenTerminalDimensionIsOverOuterDiv?: { width: string, height: string }\n  }[] = [];\n\n  constructor(private renderer: Renderer2, private ref: ChangeDetectorRef, private hostRef: ElementRef) {\n    this.requestRenderSubscription = this.requestRenderFromAPI.subscribe(change => {\n      let changeWithDefault = {\n        rowChanged: false, columnChanged: false, ...change\n      };\n      this.pushToWaitingQueue(changeWithDefault);\n      this.getNextOrWait();\n    });\n  }\n  private observableSetup() {\n    this.term.onData((input) => {\n      this.keyInputSubject.next(input);\n    });\n    this.term.onKey(e => {\n      this.keyEventSubject.next(e);\n    })\n    this.keyInputSubjectSubscription = this.keyInputSubject.subscribe((data) => {\n      this.keyInputEmitter.emit(data);\n    })\n    this.keyEventSubjectSubscription = this.keyEventSubject.subscribe((e) => {\n      this.keyEventEmitter.emit(e);\n    });\n\n    this.resizableObservers = [this.observeTerminalDimension(), this.observeHostDimension()];\n    this.allLogsSubjectSubscription = this.allLogsSubject.subscribe((change) => {\n      if (change)\n        this.coordinateOuterAndTerminal(change);\n      else\n        this.coordinateOuterAndTerminal(change);\n      this.getNextOrWait();\n    });\n    this.getNextOrWait();\n  }\n  /**\n   * set dimensions\n   */\n  private setOuterDimensions(left: number, top: number, width: number, height: number) {\n    this.requestRenderFromAPI.next({\n      rowChanged: false, columnChanged: false\n      , dragged: { draggedWidth: `${width}px`, draggedHeight: `${height}px` }\n    });\n  }\n\n  /**\n   * Render is being used for fast rendering without markForCheck().\n   */\n  private applyStyleToDiv() {\n    Object.keys(this.stylesForDiv).map(key => {\n      return { key, value: this.stylesForDiv[key] }\n    }).forEach(({ key, value }) => {\n      if (value)\n        this.renderer.setStyle(this.resizeBox.nativeElement, key, value);\n      else {\n        this.renderer.removeStyle(this.resizeBox.nativeElement, key);\n      }\n    });\n    this.stylesForDiv = this.stylesForDiv; //invalidate\n  }\n\n  /**\n   * When draggable is true, add border styles \n   * Render is being used for fast rendering without markForCheck().\n   */\n  // private applyStyleToDraggable() {\n  //   if (this._draggableInput)\n  //     this.renderer.addClass(this.terminalOuter.nativeElement, 'draggable');\n  //   else\n  //     this.renderer.removeClass(this.terminalOuter.nativeElement, 'draggable');\n  // }\n\n  ngOnInit() {\n  }\n\n  /**\n   * It creates new terminal in #terminal.\n   */\n  ngAfterViewInit() {\n    this.fitAddon = new FitAddon();\n    this.term = new Terminal();\n    this.term.open(this.terminalOuter.nativeElement);\n    this.term.loadAddon(this.fitAddon);\n    this.observableSetup();\n    this.requestRenderFromAPI.next({});\n  }\n\n  ngOnChanges(changes?: SimpleChanges) {\n    console.group(\"onChanges\");\n    console.debug('prop: ', changes);\n    console.groupEnd();\n    if (changes?._rowsInput) {\n      if (changes?._rowsInput?.previousValue != changes?._rowsInput?.currentValue) {\n        this.requestRenderFromAPI.next({ rowChanged: true });\n      }\n    }\n    if (changes?._colsInput) {\n      if (changes?._colsInput?.previousValue != changes?._colsInput?.currentValue) {\n        this.requestRenderFromAPI.next({ columnChanged: true });\n      }\n    }\n    // this.requestRenderFromAPI.next({});\n  }\n  /**\n   * It must be called after having initialized the terminal.\n   * xterm fit\n   * @param rowColChange \n   * @returns \n   */\n  private coordinateOuterAndTerminal(changeList: {\n    rowChanged: boolean\n    , columnChanged: boolean\n    , dragged?: { draggedWidth: string, draggedHeight: string }\n    , hostResized?: { width: string, height: string }\n    , whenTerminalDimensionIsOverOuterDiv?: { width: string, height: string }\n  }) {\n    console.debug(`changeList: ${JSON.stringify(changeList)}`);\n    // apply a style input while keeping width and height default\n    this.stylesForDiv = {\n      ...this.stylesForDiv\n      , ...this._stylesInput\n      , width: this.stylesForDiv.width\n      , height: this.stylesForDiv.height\n    };\n    // but if the div is dragged, update width, height\n    if (changeList.dragged) {\n      this.stylesForDiv.width = changeList.dragged.draggedWidth;\n      this.stylesForDiv.height = changeList.dragged.draggedHeight;\n      this.lastDraggedPosition = {width: changeList.dragged.draggedWidth, height: changeList.dragged.draggedHeight};\n    } else if (!this._rowsInput && !this._colsInput && !(this.draggable && this.lastDraggedPosition)) {\n      // but if the dimension of host element is resized, update width and height\n      this.stylesForDiv.width = '100%';\n      this.stylesForDiv.height = '100%';\n    }\n    this.applyStyleToDiv();\n\n    // resize with new cols and rows if they changed.\n    if (changeList.rowChanged || changeList.columnChanged) {\n      this.term.resize(this._colsInput ?? this.term.cols, this._rowsInput ?? this.term.rows);\n    } else { \n      // fit() operation doesn't see padding values of terminalOuter.\n      // But it uses padding values of terminal element.\n      // So we force to set padding values when calling fit() operation for a while.\n      this.term.element.style.paddingLeft = `${this.paddingSize}px`;\n      this.term.element.style.paddingRight = `${this.paddingSize}px`;\n      this.fitAddon.fit();\n      this.term.element.style.padding = '0px';\n    }\n\n    // coordinate difference between terminal and outer\n    let xtermScreen = this.term.element.getElementsByClassName('xterm-screen')[0];\n    let xtermViewport = this.term.element.getElementsByClassName('xterm-viewport')[0];\n    const terminalWidth = xtermScreen.clientWidth;\n    const terminalHeight = xtermScreen.clientHeight;\n    const core = (this.underlying as any)._core;\n    const scrollWidth: number = core.viewport.scrollBarWidth as number;\n     \n    // It fixes that the viewport's width doesn't changes after calling fit()\n    this.renderer.setStyle(xtermViewport, 'width', `${terminalWidth + scrollWidth}px`);\n    console.debug(terminalWidth + scrollWidth + this.paddingSize*2 , terminalWidth, scrollWidth, this.paddingSize*2 ); // + borderWidth * 2\n    console.debug(terminalHeight + this.paddingSize*2 , terminalHeight);\n    this.stylesForDiv = {\n      ...this.stylesForDiv, width: `${terminalWidth + scrollWidth +this.paddingSize*2 }px`\n      , height: `${terminalHeight + this.paddingSize*2 }px`\n    };\n    this.applyStyleToDiv();\n    this.ref.markForCheck();\n  }\n\n  observeTerminalDimension() {\n    let viewport: HTMLDivElement | undefined = this.terminalOuter.nativeElement.querySelector('.xterm-viewport');\n    if (viewport) {\n      const resizeObserver = new ResizeObserver(entries => {\n        const divWidth = parseFloat(getComputedStyle(this.terminalOuter.nativeElement).width);\n        const divHeight = parseFloat(getComputedStyle(this.terminalOuter.nativeElement).height);\n        let width: number = undefined;\n        let height: number = undefined;\n        for (let entry of entries) {\n          if (entry.contentBoxSize) {\n            if (entry.target instanceof HTMLElement) {\n              width = parseFloat(getComputedStyle(entry.target).width);\n              height = parseFloat(getComputedStyle(entry.target).height);\n            }\n          } else {\n            width = parseFloat(getComputedStyle(entry.target).width);\n            height = parseFloat(getComputedStyle(entry.target).height);\n          }\n        }\n        if (width > divWidth || height > divHeight) {\n          this.requestRenderFromAPI.next({ whenTerminalDimensionIsOverOuterDiv: { width: `${width}px`, height: `${height}px` } });\n        }\n      });\n      resizeObserver.observe(viewport);\n      return resizeObserver;\n    } else {\n      console.error(\"Invalid state is detected. xterm element should exist below .terminal-outer.\")\n    }\n  }\n\n  observeHostDimension() {\n    let hostElement: HTMLDivElement | undefined = this.hostRef.nativeElement;\n    if (hostElement) {\n      const resizeObserver = new ResizeObserver(entries => {\n        let width: number = undefined;\n        let height: number = undefined;\n        for (let entry of entries) {\n          if (entry.contentBoxSize) {\n            if (entry.target instanceof HTMLElement) {\n              width = parseFloat(getComputedStyle(entry.target).width);\n              height = parseFloat(getComputedStyle(entry.target).height);\n            }\n          } else {\n            width = parseFloat(getComputedStyle(entry.target).width);\n            height = parseFloat(getComputedStyle(entry.target).height);\n          }\n        }\n        this.requestRenderFromAPI.next({ hostResized: { width: `${width}px`, height: `${height}px` } });\n      });\n      resizeObserver.observe(hostElement);\n      return resizeObserver;\n    } else {\n      console.error(\"Invalid state is detected. xterm element should exist below .terminal-outer.\")\n    }\n  }\n  /**\n   * clean all resources\n   */\n  ngOnDestroy(): void {\n    if (this.keyInputSubjectSubscription)\n      this.keyInputSubjectSubscription.unsubscribe();\n    if (this.dataSourceSubscription)\n      this.dataSourceSubscription.unsubscribe();\n    if (this.keyEventSubjectSubscription)\n      this.keyEventSubjectSubscription.unsubscribe();\n    if (this.requestRenderSubscription)\n      this.requestRenderSubscription.unsubscribe();\n    if (this.allLogsSubjectSubscription)\n      this.allLogsSubjectSubscription.unsubscribe();\n    if (this.interval)\n      clearInterval(this.interval);\n    if (this.term)\n      this.term.dispose();\n    this.resizableObservers.forEach(ob => ob.disconnect());\n  }\n\n  write(chars: string) {\n    this.term.write(chars);\n  }\n\n  get keyInput(): Observable<string> {\n    return this.keyInputSubject;\n  }\n\n  get keyEventInput(): Observable<{ key: string; domEvent: KeyboardEvent; }> {\n    return this.keyEventSubject;\n  }\n\n  get underlying(): Terminal {\n    return this.term;\n  }\n\n  get isDraggableOnEdgeActivated() {\n    // return this.displayOption.activateDraggableOnEdge != undefined && this.displayOption.fixedGrid == undefined;\n    return this._draggableInput;\n  }\n\n  /**\n   * After user coordinate dimensions of terminal, it's called.\n   * @param left \n   * @param top \n   * @param width \n   * @param height \n   */\n  onResizeEnd(left: number, top: number, width: number, height: number): void {\n    this.setOuterDimensions(left, top, width, height);\n  }\n\n  /**\n   * Before onResizeEnd is called, it valiates dimensions to change.\n   * @param re dimension to be submitted from resizable stuff\n   */\n  validatorFactory(): (re: ResizeEvent) => boolean {\n    const comp = this;\n    return (re: ResizeEvent) => {\n      // const displayOption = comp.displayOption;\n      if (this._draggableInput) {\n        let left = re.rectangle.left, top = re.rectangle.top, width = re.rectangle.width, height = re.rectangle.height;\n        if ((width < (this._minWidthInput ?? 100)) || (height < (this._minHeightInput ?? 50))) {\n          return false;\n        } else return true;\n      } else\n        return false;\n    }\n  }\n\n}\n","<global-style></global-style>\n<div mwlResizable #resizeBox class=\"resize-box\" [validateResize]=\"validatorFactory()\" [enableGhostResize]=\"true\"\n    (resizeEnd)=\"onResizeEnd($event.rectangle.left, $event.rectangle.top, $event.rectangle.width, $event.rectangle.height)\">\n    <div #terminal class=\"terminal-outer\">\n    </div>\n    <div class=\"resize-handle resize-handle-top\" mwlResizeHandle [ngClass]=\"{'handle-active' : isDraggableOnEdgeActivated}\"\n        [resizeEdges]=\"{ top: false }\"></div>\n    <div class=\"resize-handle resize-handle-left\" mwlResizeHandle [ngClass]=\"{'handle-active' : isDraggableOnEdgeActivated}\"\n        [resizeEdges]=\"{ left: false }\"></div>\n    <div class=\"resize-handle resize-handle-right\" mwlResizeHandle [ngClass]=\"{'handle-active' : isDraggableOnEdgeActivated}\"\n        [resizeEdges]=\"isDraggableOnEdgeActivated ? { right: true } : { right: false }\"></div>\n    <div class=\"resize-handle resize-handle-bottom\" mwlResizeHandle [ngClass]=\"{'handle-active' : isDraggableOnEdgeActivated}\"\n        [resizeEdges]=\"isDraggableOnEdgeActivated ? { bottom: true } : { bottom: false }\"></div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { NgTerminalComponent } from './ng-terminal.component';\r\nimport { ResizableModule } from 'angular-resizable-element';\r\nimport { GlobalStyleComponent } from './global-style/global-style.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [NgTerminalComponent, GlobalStyleComponent],\r\n  imports: [\r\n    ResizableModule, CommonModule\r\n  ],\r\n  exports: [NgTerminalComponent]\r\n})\r\nexport class NgTerminalModule { }\r\n","/**\r\n *\r\n * It is a CSI sequences generator\r\n * https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-Functions-using-CSI-_-ordered-by-the-final-character_s_\r\n */\r\nlet CSI = '\\x9b'\r\nexport class FunctionsUsingCSI {\r\n    /**\r\n     *  CSI Ps @  Insert Ps (Blank) Character(s) (default = 1) (ICH). \r\n     * \r\n     * */\r\n    static insertBlank(count: number){\r\n        return `${CSI}${count}@`; \r\n    }\r\n    /**\r\n     *  CSI Ps SP @ */\r\n    /**\r\n     *  CSI Ps A  Cursor Up Ps Times (default = 1) (CUU). \r\n     * \\x9b3A*/\r\n    static cursorUp(count: number){\r\n        return `${CSI}${count}A`;\r\n    }\r\n    /**\r\n     *  CSI Ps SP A */\r\n    /**\r\n     *  CSI Ps B  Cursor Down Ps Times (default = 1) (CUD).\r\n     * \\x9b3B */\r\n    static cursorDown(count: number){\r\n        return `${CSI}${count}B`;\r\n    }\r\n    /**\r\n     *  CSI Ps C  Cursor Forward Ps Times (default = 1) (CUF). \r\n     * \\x9b3C */\r\n    static cursorForward(count: number){\r\n        return `${CSI}${count}C`;\r\n    }\r\n    /**\r\n     *  CSI Ps D  Cursor Backward Ps Times (default = 1) (CUB). \r\n     * \\x9b3D */\r\n    static cursorBackward(count: number){\r\n        return `${CSI}${count}D`;\r\n    }\r\n    /**\r\n     *  CSI Ps E  Cursor Next Line Ps Times (default = 1) (CNL). \r\n     * \\x9b3E\r\n     * */\r\n    static cursorNextLine(count: number){\r\n        return `${CSI}${count}E`;\r\n    }\r\n    /**\r\n     *  CSI Ps F  Cursor Preceding Line Ps Times (default = 1) (CPL).\r\n     * \\x9b3F\r\n     *  */\r\n    static cursorPrecedingLine(count: number){\r\n        return `${CSI}${count}F`;\r\n    }\r\n    /**\r\n     *  CSI Ps G  Cursor Character Absolute  [column] (default = [row,1]) (CHA).\r\n     *  \\x9b9G\r\n     *  */\r\n    static cursorColumn(count: number){\r\n        return `${CSI}${count}G`;\r\n    }\r\n    /**\r\n     *  CSI Ps ; Ps H  Cursor Position [row;column] (default = [1,1]) (CUP).\r\n     * \\x9b2;2H\r\n     * */\r\n    static cursorPosition(row: number, col: number){\r\n        return `${CSI}${row};${col}H`;\r\n    }\r\n    /**\r\n     *  CSI Ps I  Cursor Forward Tabulation Ps tab stops (default = 1) (CHT). */\r\n    /**\r\n     *  CSI Ps J  Erase in Display (ED), VT100.\r\n     *      Ps = 0  -> Erase Below (default).\r\n     *      Ps = 1  -> Erase Above.\r\n     *      Ps = 2  -> Erase All.\r\n     *      Ps = 3  -> Erase Saved Lines (xterm).\r\n     * \\x9b2J\r\n     *  */\r\n    static eraseInDisplay(category: KindOfEraseInDisplay){\r\n        return `${CSI}${category}J`;\r\n    }\r\n\r\n    /**\r\n     *  CSI ? Ps J\r\n     *  Erase in Display (DECSED), VT220.\r\n     *    Ps = 0  -> Selective Erase Below (default).\r\n     *    Ps = 1  -> Selective Erase Above.\r\n     *    Ps = 2  -> Selective Erase All.\r\n     *    Ps = 3  -> Selective Erase Saved Lines (xterm).\r\n     * \\x9b?2J \r\n     * */\r\n    static eraseSelectiveThingsInDisplay(category: KindOfEraseInDisplay){\r\n        return `${CSI}?${category}J`;\r\n    }\r\n    /**\r\n     *  CSI Ps K  \r\n     *   Erase in Line (EL), VT100.\r\n     *     Ps = 0  -> Erase to Right (default).\r\n     *     Ps = 1  -> Erase to Left.\r\n     *     Ps = 2  -> Erase All.\r\n     * \\x9b?1K\r\n     * */\r\n    static eraseInLine(category: KindOfEraseInLine){\r\n        return `${CSI}${category}K`;\r\n    }\r\n    /**\r\n     *  CSI ? Ps K \r\n     *    Erase in Line (DECSEL), VT220.\r\n     *      Ps = 0  -> Selective Erase to Right (default).\r\n     *      Ps = 1  -> Selective Erase to Left.\r\n     *      Ps = 2  -> Selective Erase All.\r\n     * \\x9b?1K\r\n     * */\r\n    static eraseSelectiveThingsInLine(category: KindOfEraseInLine){\r\n        return `${CSI}?${category}K`;\r\n    }\r\n    /**\r\n     *  CSI Ps L  Insert Ps Line(s) (default = 1) (IL).\r\n     * \\x9b2L\r\n     *  */\r\n    static insertLines(count: number){\r\n        return `${CSI}${count}L`;\r\n    }\r\n    /**\r\n     *  CSI Ps M  Delete Ps Line(s) (default = 1) (DL).\r\n     * \\x9b2M\r\n     *  */\r\n    static deleteLines(count: number){\r\n        return `${CSI}${count}M`;\r\n    }\r\n    /**\r\n     *  CSI Ps P  Delete Ps Character(s) (default = 1) (DCH).\r\n     * \\x9b2P\r\n     *  */\r\n    static deleteCharacter(count: number){\r\n        return `${CSI}${count}P`;\r\n    }\r\n    /**\r\n     *  CSI Ps S  Scroll up Ps lines (default = 1) (SU), VT420, ECMA-48.\r\n     * \\x9b2S\r\n     *  */\r\n    static scrollUpLines(count: number){\r\n        return `${CSI}${count}S`;\r\n    }\r\n    /**\r\n     *  CSI ? Pi ; Pa ; Pv S */\r\n    /**\r\n     *  CSI Ps T  Scroll down Ps lines (default = 1) (SD), VT420. \r\n     * \\x9b2T\r\n     * */\r\n    static scrollDownLines(count: number){\r\n        return `${CSI}${count}T`;\r\n    }\r\n    /**\r\n     *  CSI Ps ; Ps ; Ps ; Ps ; Ps T */\r\n    /**\r\n     *  CSI > Ps ; Ps T */\r\n    /**\r\n     *  CSI Ps X  Erase Ps Character(s) (default = 1) (ECH).\r\n     * \\x9b2X\r\n     *  */\r\n    static eraseCharacters(count: number){\r\n        return `${CSI}${count}X`;\r\n    }\r\n    /**\r\n     *  CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT). */\r\n    /**\r\n     *  CSI Ps ^  Scroll down Ps lines (default = 1) (SD), ECMA-48. */\r\n    /**\r\n     *  CSI Pm `  Character Position Absolute  [column] (default = [row,1]) */\r\n    /**\r\n     *  CSI Pm a  Character Position Relative  [columns] (default = [row,col+1]) */\r\n    /**\r\n     *  CSI Ps b  Repeat the preceding graphic character Ps times (REP). */\r\n    /**\r\n     *  CSI Ps c  Send Device Attributes (Primary DA). */\r\n    /**\r\n     *  CSI = Ps c */\r\n    /**\r\n     *  CSI > Ps c */\r\n    /**\r\n     *  CSI Pm d  Line Position Absolute  [row] (default = [1,column]) (VPA). */\r\n    /**\r\n     *  CSI Pm e  Line Position Relative  [rows] (default = [row+1,column]) */\r\n    /**\r\n     *  CSI Ps ; Ps f */\r\n    /**\r\n     *  CSI Ps g  Tab Clear (TBC). */\r\n    /**\r\n     *  CSI Pm h  Set Mode (SM). */\r\n    /**\r\n     *  CSI ? Pm h */\r\n    /**\r\n     *  CSI Pm i  Media Copy (MC). */\r\n    /**\r\n     *  CSI ? Pm i */\r\n    /**\r\n     *  CSI Pm l  Reset Mode (RM). */\r\n    /**\r\n     *  CSI ? Pm l */\r\n    /**\r\n     *  CSI Pm m  Character Attributes (SGR). */\r\n    /**\r\n     *  CSI > Ps ; Ps m */\r\n    /**\r\n     *  CSI Ps n  Device Status Report (DSR). */\r\n    /**\r\n     *  CSI > Ps n */\r\n    /**\r\n     *  CSI ? Ps n */\r\n    /**\r\n     *  CSI > Ps p */\r\n    /**\r\n     *  CSI ! p   Soft terminal reset (DECSTR), VT220 and up. */\r\n    /**\r\n     *  CSI Ps ; Ps \" p */\r\n    /**\r\n     *  CSI Ps $ p */\r\n    /**\r\n     *  CSI ? Ps $ p */\r\n    /**\r\n     *  CSI # p */\r\n    /**\r\n     *  CSI Ps ; Ps # p */\r\n    /**\r\n     *  CSI Ps q  Load LEDs (DECLL), VT100. */\r\n    /**\r\n     *  CSI Ps SP q */\r\n    /**\r\n     *  CSI Ps \" q */\r\n    /**\r\n     *  CSI # q   Pop video attributes from stack (XTPOPSGR), xterm.  This is an */\r\n    /**\r\n     *  CSI Ps ; Ps r */\r\n    /**\r\n     *  CSI ? Pm r */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr ; Ps $ r */\r\n    /**\r\n     *  CSI s     Save cursor, available only when DECLRMM is disabled (SCOSC, */\r\n    /**\r\n     *  CSI Pl ; Pr s */\r\n    /**\r\n     *  CSI ? Pm s */\r\n    /**\r\n     *  CSI Ps ; Ps ; Ps t */\r\n    /**\r\n     *  CSI > Ps ; Ps t */\r\n    /**\r\n     *  CSI Ps SP t */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr ; Ps $ t */\r\n    /**\r\n     *  CSI u     Restore cursor (SCORC, also ANSI.SYS). */\r\n    /**\r\n     *  CSI Ps SP u */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr ; Pp ; Pt ; Pl ; Pp $ v */\r\n    /**\r\n     *  CSI Ps $ w */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr ' w */\r\n    /**\r\n     *  CSI Ps x  Request Terminal Parameters (DECREQTPARM). */\r\n    /**\r\n     *  CSI Ps * x */\r\n    /**\r\n     *  CSI Pc ; Pt ; Pl ; Pb ; Pr $ x */\r\n    /**\r\n     *  CSI Ps # y */\r\n    /**\r\n     *  CSI Pi ; Pg ; Pt ; Pl ; Pb ; Pr * y */\r\n    /**\r\n     *  CSI Ps ; Pu ' z */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr $ z */\r\n    /**\r\n     *  CSI Pm ' { */\r\n    /**\r\n     *  CSI # { */\r\n    /**\r\n     *  CSI Ps ; Ps # { */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr $ { */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr # | */\r\n    /**\r\n     *  CSI Ps $ | */\r\n    /**\r\n     *  CSI Ps ' | */\r\n    /**\r\n     *  CSI Ps * | */\r\n    /**\r\n     *  CSI # }   Pop video attributes from stack (XTPOPSGR), xterm.  Popping */\r\n    /**\r\n     *  CSI Pm ' } */\r\n    /**\r\n     *  CSI Pm ' ~ */\r\n}\r\nexport enum KindOfEraseInDisplay{\r\n    Below=0, Above=1, All=2, SavedLines=3\r\n}\r\nexport enum KindOfEraseInLine{\r\n    Right=0, Left=1, All=2\r\n}","/*\r\n * Public API Surface of ng-terminal\r\n */\r\n\r\nexport * from './lib/ng-terminal.service';\r\nexport * from './lib/ng-terminal.component';\r\nexport * from './lib/ng-terminal.module';\r\nexport * from './lib/functions-using-csi';\r\nexport * from './lib/ng-terminal';\r\n// export * from './lib/display-option';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}